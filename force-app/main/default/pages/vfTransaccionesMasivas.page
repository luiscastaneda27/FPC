<apex:page cache="false" expires="0" controller="controlTransaccionesMasivas" sidebar="false" showHeader="false" >
    <apex:includeScript value="{!URLFOR($Resource.xlsx, 'xlsx.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.Recursos_Portal, 'scripts/jquery.js')}" />
        
    <style>
        #drop{
            border:2px dashed #bbb;
            -moz-border-radius:5px;
            -webkit-border-radius:5px;
            border-radius:5px;
            padding:25px;
            text-align:center;
            font:20pt bold,"Vollkorn";color:#bbb
        }
        #b64data{
            width:100%;
        }
        .columna1 {
              float:left; 
              width:200px;              
              padding-left:50px;
              padding-top:15px;
        }
        .columna2 {
              padding-top:15px;  
              margin-left:210px;
              padding-right:15px;                            
        }
    </style>
    
    <apex:form >
        <input type="radio" name="format" value="csv" checked="cheked"  hidden="true"/> 
        <input type="radio" name="format" value="json"  hidden="true" />
        <input type="radio" name="format" value="form" hidden="true" />
    
        <div class="columna1">
            <div>
                <input type="button" style="width:60%; height:30px" id="btn_processFile" name="btn_processFile" value="Procesar y Subir" hidden="hidden" onclick="processFile();" /><br/><br/>                
            </div>            
        </div>
        <div class="columna2">
            <div id="drop">Arrastre su archivo Excel con Transacciones aqu√≠ 
                <img id="imgLoad" hidden="hidden" name="imgLoad" src="{!URLFOR($Resource.gifLoad)}" width="60px" heigth="60px" /> 
            </div>     
            <pre id="out"></pre>        
        </div>
        <br />        
    </apex:form>
    
    <script type="text/javascript">

        var outputData = "";
        var Comercio = getUrlVars()['idComercio'];
        var descuento = getUrlVars()['idDescuento'];
        var usuario = getUrlVars()['idUsuario'];
               
        function processFile(){
            $('#imgLoad').removeAttr('hidden');
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.controlTransaccionesMasivas.processFile}',
                outputData,Comercio,descuento,usuario,
                
                function(result, event){
                    if (event.status) {
                        
                        alert(result.ERROR);
                        
                        $('#tblErrors').append('');
                        $.each(result.listError, function(index, value){
                            $('#tblErrors').append('<tr><td>' + value + '</td></tr>');
                        });
                        
                        if(result.ERROR.indexOf('Se Insertaron') != -1){
                             $('#btn_processFile').attr('hidden', 'hidden');                                  
                             $('#imgLoad').attr('hidden', 'hidden');
                        }else{
                            $('#btn_processFile').attr('hidden', 'hidden');                                  
                            $('#imgLoad').attr('hidden', 'hidden');                            
                        }                        
                    }else if (event.type === 'exception') {                        
                        event.message + "<br/>\n<pre>" + event.where + "</pre>";
                    }else {
                        //document.getElementById("responseErrors").innerHTML = event.message;
                    }
                }, 
                {escape: true},
                {timeout: 60000}
            );
        }                                  
        function getUrlVars(){
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for(var i = 0; i < hashes.length; i++){
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0]] = hash[1];
            }
            return vars;
        }

    </script>    
    <script>
        //API for Process Excel
        function xlsxworker(data, cb) {
           
            var worker = new Worker("{!URLFOR($Resource.xlsx, 'xlsxworker.js')}");
            worker.onmessage = function(e) {
                switch(e.data.t) {
                    case 'ready': break;
                    case 'e': console.error(e.data.d);
                    case 'xlsx': cb(JSON.parse(e.data.d)); break;
                }
            };
            var arr = btoa(String.fromCharCode.apply(null, new Uint8Array(data)));
            worker.postMessage(arr);
        }
        
        function get_radio_value( radioName ) {
            var radios = document.getElementsByName( radioName );
            for( var i = 0; i < radios.length; i++ ) {
                if( radios[i].checked ) {
                    return radios[i].value;
                }
            }
        }
        
        function to_json(workbook) {
            var result = {};
            workbook.SheetNames.forEach(function(sheetName) {
                var roa = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                if(roa.length > 0){
                    result[sheetName] = roa;
                }
            });
            return result;
        }
        
        function to_csv(workbook) {
            var result = [];
            workbook.SheetNames.forEach(function(sheetName) {
                var csv = XLSX.utils.sheet_to_csv(workbook.Sheets[sheetName]);
                if(csv.length > 0){
                    //result.push("SHEET: " + sheetName);
                    //result.push("");
                    result.push(csv);
                }
            });
            return result.join("\n");
        }
        
        function to_formulae(workbook) {
            var result = [];
            workbook.SheetNames.forEach(function(sheetName) {
                var formulae = XLSX.utils.get_formulae(workbook.Sheets[sheetName]);
                if(formulae.length > 0){
                    result.push("SHEET: " + sheetName);
                    result.push("");
                    result.push(formulae.join("\n"));
                }
            });
            return result.join("\n");
        }
        
        var tarea = document.getElementById('b64data');
        function b64it() {
            var wb = XLSX.read(tarea.value, {type: 'base64'});
            process_wb(wb);
        }
        
        function process_wb(wb) {           
            switch(get_radio_value("format")) {
                case "json":
                    outputData = JSON.stringify(to_json(wb), 2, 2);  
                    if(outputData != ''){
                        $('#btn_processFile').removeAttr('hidden'); 
                    }                  
                    break;
                case "form":
                    outputData = to_formulae(wb);
                    break; 
                default:
                    outputData = to_csv(wb);
                    if(outputData != ''){
                        $('#btn_processFile').removeAttr('hidden'); 
                        $('#imgLoad').attr('hidden', 'hidden');
                    }
                    break;
            }
            if(out.innerText === undefined) out.textContent = outputData;
            else out.innerText = outputData;
        }
        
        var drop = document.getElementById('drop');
        function handleDrop(e) {
            $('#imgLoad').removeAttr('hidden');
            e.stopPropagation();
            e.preventDefault();
            var files = e.dataTransfer.files;
            var i,f;
            for (i = 0, f = files[i]; i != files.length; ++i) {
                var reader = new FileReader();
                var name = f.name;
                reader.onload = function(e) {
                    var data = e.target.result;
                    if(typeof Worker !== 'undefined') {
                        xlsxworker(data, process_wb);
                    } else {
                        //var wb = XLSX.read(data, {type: 'binary'});
                        var arr = String.fromCharCode.apply(null, new Uint8Array(data));
                        var wb = XLSX.read(btoa(arr), {type: 'base64'});
                        process_wb(wb);
                    }
                };
                //reader.readAsBinaryString(f);
                reader.readAsArrayBuffer(f);
            }
        }
        
        function handleDragover(e) {
            e.stopPropagation();
            e.preventDefault();
            e.dataTransfer.dropEffect = 'copy';
        }
        
        if(drop.addEventListener) {
            drop.addEventListener('dragenter', handleDragover, false);
            drop.addEventListener('dragover', handleDragover, false);
            drop.addEventListener('drop', handleDrop, false);
        }        
        
    </script>
    
    
</apex:page>