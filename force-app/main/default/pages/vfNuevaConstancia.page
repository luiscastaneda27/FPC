<apex:page standardController="Constancia__c" extensions="controllerAdminConstancias" sidebar="false" cache="false" showHeader="false" standardStylesheets="true" tabStyle="Opportunity">
    <apex:includeScript value="{!URLFOR($Resource.jQuery)}" />
    <apex:includeScript value="{!URLFOR($Resource.ckEditor, 'ckeditor.js')}" />  
    <apex:stylesheet value="{!URLFOR($Resource.ckEditor, 'contents.css')}"  />
      
    <apex:stylesheet value="{!URLFOR($Resource.chosen, 'chosen.css')}"  />
    <script language="javascript">
        function mostrarFondo() {
            document.getElementById('fondoModal').style.display = "block";
        }
        
        function ocultarFondo() {
            document.getElementById('fondoModal').style.display = "none";
        }
        
        function seleccionarOficial(valor) {
            document.getElementById('idOficial').value = valor;
        }
        
        function seleccionarFecha(valor) {
            document.getElementById('fecha').value = valor;
        }
        
        function numbersonly(e, decimal, field) {
            var key;
            var keychar;
            
            
            if (window.event) {
                key = window.event.keyCode;
            }
            else if (e) {
                key = e.which;
            }
            else {
                return true;
            }
            keychar = String.fromCharCode(key);
        
            if ((key==null) || (key==0) || (key==8) ||  (key==9) || (key==13) || (key==27) ) {
                return true;
            }
            else if ((("0123456789").indexOf(keychar) > -1)) {
                regexp = /.[0-9]{2}$/
                if( !(regexp.test(field.value))){
                    return true;
                }
            }
            else if (decimal && (keychar == ".")) {
                return NumCheck(e, field)
            }
            else
                return false;
        }
        
        function NumCheck(e, field) {
            key = e.keyCode ? e.keyCode : e.which
          
            // backspace
            if (key == 8) return true
            
            // 0-9
            if (key > 47 && key < 58) {
          
              if (field.value == "") return true
              
              regexp = /.[0-9]{2}$/
              return !(regexp.test(field.value))
            }
          
            // ,
            if (key == 46) {
            
              if (field.value == "") return false
              
              regexp = /^[0-9]+$/
              return regexp.test(field.value)
            }
            
            // other key
            return false
      
      }
    </script>
    
    <style type="text/css">
        body{
            font-size:12px;
        font-family:Arial;
        }
        .campoCopiado{
            font-size:12px;
            font-family:Arial;
        }
        .fondoModal {
            background-color:#000000;
            opacity: 0.40;
            filter: alpha(opacity = 40);
            position: absolute;
            width: 200%;
            height: 200%;
            top: 0;
            left: 0;
            z-index: 9998;
        }
        
        .custPopup{
            background-color: white;
            border-width: 2px;
            border-style: solid;
            z-index: 9990;
            left: 50%;
            padding:10px;
            position: fixed;
            /* These are the 3 css properties you will need to change so the popup 
            displays in the center of the screen. First set the width. Then set 
            margin-left to negative half of what the width is. You can add 
            the height property for a fixed size pop up if you want.*/
            width: 800px;
            height:500px;
            margin:-250px 0 0 -400px;
            top:50%;
        }
        
        .popupBackground{
            background-color:black;
            opacity: 0.20;
            filter: alpha(opacity = 20);
            position: absolute;
            width: 200%;
            height: 200%;
            top: 0;
            left: 0;
            z-index: 9989;
        }
    </style>
    <div id="fondoModal" class="fondoModal" style="display:none;"></div>
    <apex:form >    
        <apex:pagemessages />
        <apex:pageblock title="Datos de la Constancia">
            <apex:pageblockButtons >
                <apex:commandButton action="{!Save}" value="Guardar" />
                <apex:commandButton action="{!quickSave}" value="Guardado rápido" />
                <apex:commandButton action="{!cancel}" value="Cancelar" />
            </apex:pageblockButtons>
            
            <apex:pageBlockSection collapsible="false" title="Contenido:" columns="2">
                <apex:inputField value="{!Constancia__c.Name}" required="true" id="txt_out_nombre" />
                <apex:inputField value="{!Constancia__c.Codigo__c}" />
            </apex:pageBlockSection>
                
                <table>
                    <tr>
                        <td><apex:outputLabel style="font-weight: bold;" for="sel_campos">Campo:</apex:outputLabel>&nbsp;</td>
                    
                        <td><apex:selectList styleClass="chosen-select" style="width:100%" title="Incluir un campo especial permite que al momento de generar la constancia como PDF se carguen los valores reales desde la base de datos" size="1" id="sel_campos" value="{!campoSeleccionado}" > 
                               <apex:actionSupport event="onchange" reRender="txt_out_campo" />               
                               <apex:selectOption itemValue="ninguno"></apex:selectOption>
                               <apex:selectOptions value="{!listItemsCamposCaso}"></apex:selectOptions>
                        </apex:selectList>    
                        </td>
                        <td><apex:outputLabel style="font-weight: bold;" for="txt_out_campo">Campo Seleccionado: </apex:outputLabel> &nbsp;</td>
                        <td>&nbsp;<apex:outputText id="txt_out_campo" value="[{!campoSeleccionado}]" styleClass="campoCopiado" /></td>   
                    </tr>
                    <tr>
                        <td><apex:outputLabel style="font-weight: bold;" >Otros Campos Especiales:</apex:outputLabel> &nbsp;</td>       
                        <td><apex:selectList styleClass="chosen-select" value="{!otroCampoSeleccionado}" size="1">
                               <apex:actionSupport event="onchange" reRender="txt_out_otroCampo" />               
                               <apex:selectOption itemValue="ninguno"></apex:selectOption> 
                               <apex:selectOptions value="{!listItemsOtrosCamposCaso}"></apex:selectOptions>
                        </apex:selectList>
                        </td>
                        <td><apex:outputLabel style="font-weight: bold;">Campo Seleccionado:</apex:outputLabel>&nbsp;</td>
                        <td><apex:outputText id="txt_out_otroCampo" value="[{!otroCampoSeleccionado}]" styleClass="campoCopiado"/></td>
                    </tr> 
                    <tr>                
                        <td> 
                            <apex:outputLabel style="font-weight: bold;" for="list_relaciones">Objetos Hijos:</apex:outputLabel>                 
                        </td>
                        
                        <td>
                            <apex:outputPanel id="out_pn_relaciones" >
                                <apex:selectList id="list_relaciones" size="1" styleClass="chosen-select" value="{!relacionSeleccionada}">
                                   <apex:actionSupport event="onchange" action="{!onchangeCampoRelacionSelecionado}" reRender="out_pan_campos" />
                                   <apex:selectOption itemValue="Ninguno"></apex:selectOption> 
                                   <apex:selectOptions value="{!listItemsRelacionesCaso}"></apex:selectOptions> 
                                </apex:selectList>
                            </apex:outputPanel>
                        </td>
                    </tr>
                    <tr>    
                        <td>
                            <apex:outputLabel style="font-weight: bold;" for="out_txt_funcion">Función Generada: &nbsp;</apex:outputLabel>
                        </td>
                        <td>    
                            <apex:outputText title="Incluir el punto y coma al insertar en el cuerpo de la constancia" id="out_txt_funcion" value="{!funcionGenerada}" />
                        </td>
                    
                    </tr>
                </table>                 
            
            <apex:pageBlockSection columns="1">     
                <apex:inputTextarea label="" required="{!htmlRequerido}" richText="false" styleClass="ckeditor" id="txt_in_hmtl_es" value="{!Constancia__c.HTML_Espanol__c}" />
            </apex:pageBlockSection>      
        </apex:pageblock>    
            
        <apex:outputPanel id="out_pan_campos">
            <apex:outputPanel styleClass="popupBackground" layout="block" rendered="{!showModalCampos}"/>
            <apex:outputPanel styleClass="custPopup" layout="block" rendered="{!showModalCampos}" style="overflow: auto;">
                <apex:pageBlock title="Campos de Objeto {!relacionSeleccionada}" id="pbListaCampos">
                    <apex:commandButton value="Aceptar" action="{!aceptarCamposSeleccionado}" reRender="out_pan_campos, out_txt_funcion" />
                    <apex:commandButton value="Cancelar" action="{!cancelarCamposSeleccionado}" reRender="out_pan_campos" />
                    <apex:pageBlockTable id="tbl_camposRelacionHijo" value="{!itemsCamposTabla}" var="item">
                        <apex:column headerValue="seleccion">
                            <apex:inputCheckbox label="{!item.seleccionado}" value="{!item.seleccionado}">
                                <apex:actionSupport event="onchange" action="{!actualizarOrdenamiento}" reRender="out_txt_ordenamiento,out_txt_funcion, tbl_camposRelacionHijo" >
                                    <apex:param name="item" value="{!item.Id.value}" assignTo="{!ordenamientoCampo}" />
                                </apex:actionSupport>
                            </apex:inputCheckbox>
                        </apex:column>
                        <apex:column headerValue="Nombre del Campo">
                            <apex:outputtext value="{!item.Id.value}" />
                        </apex:column>
                        <apex:column headerValue="Descripción">
                            <apex:outputtext value="{!item.Id.label}" />
                        </apex:column>
                        <apex:column headerValue="Ordenamiento">                            
                            <!--<apex:outputtext id="out_txt_ordenamiento" value="{!ordenamientoActual}" />-->
                            <apex:outputtext id="out_txt_actualizaOrdenamiento" value="{!item.ordenamiento}" />
                        </apex:column>                        
                    </apex:pageBlockTable>                   
                </apex:pageBlock>
            </apex:outputPanel>    
        </apex:outputPanel>      
        
     <apex:includeScript value="{!URLFOR($Resource.chosen, 'chosen.jquery.js')}" />
     <apex:includeScript value="{!URLFOR($Resource.chosen, 'docsupport/prism.js')}" />
     <script>
        
        var config = {
          '.chosen-select'           : {},
          '.chosen-select-deselect'  : {allow_single_deselect:true},
          '.chosen-select-no-single' : {disable_search_threshold:12},
          '.chosen-select-no-results': {no_results_text:'Oops, No se encontraron resultados!'},
          '.chosen-select-width'     : {width:"100%"}
        }
        for (var selector in config) {
          $(selector).chosen(config[selector]);
        }
    </script>
    </apex:form>        
</apex:page>